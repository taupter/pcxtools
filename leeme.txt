    PCX2MSX
    PCX2MSX+
    PCX2SPR
    PCX2SPR+
---------------
PCX2MSX[+] y PCX2SPR[+] son herramientas gratuítas de línea de comandos
para convertir imágenes PCX al formato TMS9918 (VDP de MSX-1).
Esto es, valores binarios preparados para ser CHRTBL/CLRTBL/NAMTBL y SPRTBL/SPATBL.

El PCX2MSX original fue programado por Edward A. Robsy Petrus [25/12/2004].
(PCX2MSX está inspirado en aquella versión,
pero no está relacionado con ella de ninguna manera)


    Uso
-----------
Desde línea de comandos, teclear:
    PCX2MSX [opciones] nombreFicheroPcx
o
    PCX2MSX+ [opciones] nombreFicheroPcx [nombreFicheroPcx...]
o
    PCX2SPR [opciones] nombreFicheroPcx
o
    PCX2SPR+ [opciones] nombreFicheroPcx

nombreFicheroPcx es el nombre de fichero PCX de entrada.
Se aplican las siguientes restricciones al fichero de entrada:
+ Debe estar bien formado (firma 0x0A, codificación RLE).
+ Debe tener una profundidad de color de 8bpp.
Nótese que:
+ Píxeles con un índice de color mayor que 15 serán ignorados.
+ Píxeles adicionales (ancho o alto no múltiplo de 8 o 16 serán ignorados
  (este comportamiento difiere del PCX2MSX original).

Los ficheros de salida tendrán el mismo nombre que nombreFicheroPcx
más una extensión adicional (.chr, .clr, .nam, .spr o .spat[.asm]).
Si existen ficheros con el mismo nombre serán sobreescritos.

El código de salida será cero si todo va bien y distinto de cero si hubo error.
ESto permite usar estos programas en makefiles, cadenas de comandos, etc.


    Opciones
----------------
El orden de las opciones no es importante.
Las opciones desconocidas serán ignoradas sin aviso.
Si hay opciones mutuamente exclusivas,
no está definido cuál de ellas será la tenida en consideración.


Estas opciones son comunes tanto para PCX2MSX como PCX2MSX+ y PCX2SPR:
-v  verbose execution
    Por defecto, sólo se escribe salida excepcional (avisos y errores).
    -v se puede usar para ver las diferentes partes del proceso.

-d  dry run. Doesn't write output files.
    No escribe los ficheros de salida.
    Esta opción es útil si sólo que quieren validar los ficheros PCX de entrada.

-i  inverted. Flips bitmap vertically.
    Invierte la imagen verticalmente.

-m  mirrored. Flips bitmap horizontally.
    Invierte la imagen horizontalmente.


Las siguientes opciones son específicas de PCX2MSX:
-il  ignore line on color collision
    Continúa procesando el fichero incluso si se encuentran colisiones.
    Las líneas conflictivas tendrán 0x00 tanto como patrón como color.
    En combinación con -d permite comprobar todas las colisiones de una vez.

-f<0..7> force bit <n> to be foreground (set) on patterns
    Forzar el bit n-ésimo a estar activo en los patrones
    
-b<0..7> force bit <n> to be background (reset) on patterns
    Forzar el bit n-ésimo a ser fondo (estar inactivo) en los patrones
    
-hl force higher color to be foreground
    Forzar el color más alto a estar activo en los patrones
    
-lh force lower color to be foreground
    Forzar el color más bajo a estar activo en los patrones
    
    Estas cuatro opciones permiten cierto control de cómo se crean los patrones,
    y qué color es forma y cuál es fondo.
    Pueden ser útiles si los colores van a ser asignados programáticamente
    (por ejemplo: fuentes coloreadas con FILVRM)
    

Las siguientes opciones son específicas de PCX2MSX+:
-n<00.ff> generate NAMTBL [starting at value <n>]
    Genera la tabla de nombres.
    Si se indica más de un fichero PCX, la tabla de nombres se generará
    de los ficheros adicionales utilizando como tabla de patrones y colores
    la del primer fichero PCX.
    Si se indica un índice opcional, la tabla de nombres se generará
    considerando que los caracteres se van a cargar a partir de dicho índice
    (por ejemplo, para ubicarlos después de la fuente).
    Habitualmente se utilizará en combinación con -rm y/o -rr.

-bb<00..ff> blank block at position <nn>
    Genera un bloque en blanco (patrón y color 0x00) en la posición indicada.
    Si hay bloques eliminados, utilizarán este índice en la tabla de nombres.
    Habitualmente se utilizará en combinación con -n y/o -rm.
    (por ejemplo, para mantener el ASCII 0x20 " " como bloque en blanco)

-rm<0..f> remove solid tiles of <n> color
    Elimina todos los bloques sólidos compuestos enteramente
    de píxeles del color especificado en hexadecimal.
    Si se genera tabla de nombres, estos bloques eliminados tendrán
    un valor menos que el índice opcional.
    Si se indica más de un fichero PCX, de dichos ficheros
    también se eliminarán los bloques eliminados del primer fichero PCX
    (por ejemplo, imágenes relacionadas: encendido/apagado, día/noche...)

-rr remove repeated tiles
    Sólo mantiene la primera copia de bloques idénticos.
    Habitualmente se utilizará en combinación con -n.
    Si se indica más de un fichero PCX, de dichos ficheros
    también se eliminarán los bloques eliminados del primer fichero PCX
    (por ejemplo, imágenes relacionadas: encendido/apagado, día/noche...)


Las siguientes opciones son específicas de PCX2SPR:
-8  generate 8x8px sprites
    La salida se ajusta para ser usada en los modos de sprites de 8x8px.

-h  generate half sprites (8x16px, 16b per sprite)
    Se cambia el orden de procesado para que los patrones de sprites multicolor
    se agrupen por medio sprite (8px de ancho por 16px de alto)


Las siguientes opciones son específicas de PCX2SPR+:
-w<16..255> sprite width (default: 16px)
    Ancho de cada sprite dentro de la hoja de sprites.
    
-h<16..255> sprite height (default: 16px)
    Alto de cada sprite dentro de la hoja de sprites.
    
-x<0..255> X offset (default: center)
    Punto a partir del cual se considerarán
    las coordenadas horizontales de los sprites en la SPATBL.
    Por defecto se utiliza el centro del sprite
    (esto es, la mitad de la anchura).
    Pueden aparecer coordenadas negativas
    si se especifica un offset que no sea cero.
    
-y<0..255> Y offset (default: middle)
    Punto a partir del cual se considerarán
    las coordenadas vertical de los sprites en la SPATBL.
    Por defecto se utiliza el centro del sprite
    (esto es, la mitad de la altura).
    Pueden aparecer coordenadas negativas independientemente del valor.

-p<0..4> attribute padding size (default: 1b)
    Número de bytes de padding que se añadirán tras cada grupo de sprites.
    Por defecto es 1 bytes (suficiente para albergar un valor de control)
    
-t<00..ff> terminator byte (default: 0xD0 (SPAT_END))
    Valor del primer byte de padding.
    Si se utiliza 0xD0 (SPAT_END, el valor por defecto),
    el número de patrón de sprite se reiniciará tras cada grupo de sprites;
    se recomienda para hojas de sprites muy grandes.
    
-b  binary spat output (default: asm)
    Especifica que la SPATBL se guarde en formato binario.
    Por defecto, se guardará en ASCII como código en ensamblador.


    Historia de versiones
-----------------------------
22/05/2014  v1.99c algoritmo reescrito desde cero (PCX2SPR+)
13/04/2013  v1.99b corrección de soluciones subóptimas en (PCX2SPR+)
28/03/2013  v1.99 primera versión con PCX2SPR+
21/12/2013  v1.0  separación de PCX2MSX en PCX2MSX y PCX2MSX+, conteniendo éste:
                  añadido índice a la opción de NAMTBL
                  añadida opción de bloque en blanco
                  gestión de múltiples ficheros PCX interrelacionados
09/10/2013  v0.99 eliminada opción -ps (ahora la detección de paleta es automática)
                  añadidas opciones relativas a NAMTBL en PCX2MSX
15/06/2013  v0.9  primera versión combinada de PCX2MSX y PCX2SPR 


    Planes futuros
----------------------
Mejorar el código fuente.
Mejorar las opciones de NAMTBL (offset, bancos, etc.).
Salida en ensamblador de NAMTBL.


    Autor
-------------
Programado por theNestruo (theNestruo@gmail.com)

Saludos a: Robsy, Iban Nieto, Jon Cortázar
